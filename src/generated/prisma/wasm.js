
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AvatarScalarFieldEnum = {
  id: 'id',
  url: 'url',
  localPath: 'localPath',
  userId: 'userId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  fullName: 'fullName',
  email: 'email',
  password: 'password',
  isEmailVerified: 'isEmailVerified',
  role: 'role',
  emailVerificationToken: 'emailVerificationToken',
  resendEmailVerificationUrl: 'resendEmailVerificationUrl',
  forgetVerificationToken: 'forgetVerificationToken',
  resendForgetVerificationUrl: 'resendForgetVerificationUrl',
  refreshToken: 'refreshToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookCoverImageUrlScalarFieldEnum = {
  id: 'id',
  url: 'url',
  bookId: 'bookId'
};

exports.Prisma.BookScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  book_title: 'book_title',
  book_description: 'book_description',
  book_price: 'book_price',
  book_publish_date: 'book_publish_date',
  book_language: 'book_language',
  book_publisher: 'book_publisher',
  book_pages: 'book_pages',
  book_rating: 'book_rating',
  book_category: 'book_category',
  book_author_name: 'book_author_name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  bookId: 'bookId',
  userId: 'userId',
  book_review: 'book_review',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.Category = exports.$Enums.Category = {
  FICTION: 'FICTION',
  NON_FICTION: 'NON_FICTION',
  CHILDREN: 'CHILDREN',
  COMICS: 'COMICS',
  POETRY: 'POETRY',
  EDUCATIONAL: 'EDUCATIONAL',
  REFERENCE: 'REFERENCE',
  RELIGION: 'RELIGION',
  SCIENCE: 'SCIENCE',
  HISTORY: 'HISTORY',
  ART: 'ART',
  HEALTH: 'HEALTH',
  BUSINESS: 'BUSINESS'
};

exports.Prisma.ModelName = {
  Avatar: 'Avatar',
  User: 'User',
  BookCoverImageUrl: 'BookCoverImageUrl',
  Book: 'Book',
  Review: 'Review'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/arjunsaxena122/Projects/backend/book_bazaar/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/arjunsaxena122/Projects/backend/book_bazaar/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  USER\n}\n\nenum Category {\n  FICTION\n  NON_FICTION\n  CHILDREN\n  COMICS\n  POETRY\n  EDUCATIONAL\n  REFERENCE\n  RELIGION\n  SCIENCE\n  HISTORY\n  ART\n  HEALTH\n  BUSINESS\n}\n\nmodel Avatar {\n  id        String @id @default(cuid())\n  url       String @default(\"https://placehold.co/600x400\")\n  localPath String @default(\"\")\n  userId    String @unique\n  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id                          String   @id @default(cuid())\n  username                    String   @default(\"johndoe007\")\n  fullName                    String   @default(\"John Doe\")\n  email                       String\n  password                    String\n  isEmailVerified             Boolean  @default(false)\n  role                        Role     @default(USER)\n  emailVerificationToken      String?\n  resendEmailVerificationUrl  String?\n  forgetVerificationToken     String?\n  resendForgetVerificationUrl String?\n  refreshToken                String?\n  createdAt                   DateTime @default(now())\n  updatedAt                   DateTime @updatedAt\n  avatar                      Avatar?\n  book                        Book[]\n  review                      Review[]\n}\n\nmodel BookCoverImageUrl {\n  id     String @id @default(cuid())\n  url    String @default(\"\")\n  bookId String @unique\n  book   Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)\n}\n\nmodel Book {\n  id                   String             @id @default(cuid())\n  userId               String\n  book_title           String             @unique\n  book_description     String\n  book_price           Decimal            @db.Decimal(10, 2)\n  book_publish_date    DateTime\n  book_language        String\n  book_publisher       String?\n  book_pages           String?\n  book_rating          Float?             @default(0)\n  book_category        Category\n  book_author_name     String\n  createdAt            DateTime           @default(now())\n  updatedAt            DateTime           @updatedAt\n  book_cover_image_url BookCoverImageUrl?\n  user                 User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  review               Review[]\n}\n\nmodel Review {\n  id          String   @id @default(cuid())\n  bookId      String\n  userId      String\n  book_review String   @unique\n  book        Book     @relation(fields: [bookId], references: [id])\n  user        User     @relation(fields: [userId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@unique([bookId, userId])\n}\n",
  "inlineSchemaHash": "e94d9c1109cb432aeccce8310ad9f872dde13f8e846ac2f64ba22e5e2b162605",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Avatar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"localPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AvatarToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"emailVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resendEmailVerificationUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"forgetVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resendForgetVerificationUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"avatar\",\"kind\":\"object\",\"type\":\"Avatar\",\"relationName\":\"AvatarToUser\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToUser\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"}],\"dbName\":null},\"BookCoverImageUrl\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToBookCoverImageUrl\"}],\"dbName\":null},\"Book\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"book_publish_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"book_language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_publisher\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_pages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"book_category\",\"kind\":\"enum\",\"type\":\"Category\"},{\"name\":\"book_author_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"book_cover_image_url\",\"kind\":\"object\",\"type\":\"BookCoverImageUrl\",\"relationName\":\"BookToBookCoverImageUrl\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookToUser\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"BookToReview\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book_review\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

